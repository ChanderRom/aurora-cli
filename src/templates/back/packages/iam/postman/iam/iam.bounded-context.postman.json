{
    "info": {
		"_postman_id"   : "d9bc3afc-fd40-5505-b57f-8f5d5118e01b",
		"name"          : "@app - iam/bounded-context",
		"schema"        : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
			"name": "GraphQL - iamCreateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamCreateBoundedContextInput!)\n{\n\tiamCreateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t}\n}",
                        "variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Incredible Plastic Tuna\", \n\t\t\"root\": \"im65v26uwclc37bjyaa9px5c1x3ry\", \n\t\t\"sort\": 35741, \n\t\t\"isActive\": false\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamCreateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:[IamCreateBoundedContextInput]!)\n{\n\tiamCreateBoundedContexts (payload:$payload)\n}",
						"variables": "{\n\t\"payload\":\n\t[\n\t\t{\n\t\t\t\"id\": \"c261dcbb-202b-4393-9ca3-4c09c6bd2f7b\", \n\t\t\t\"name\": \"Refined Concrete Shoes\", \n\t\t\t\"root\": \"b7f2xlvgmvqi5qhlxxoeh4txbsid3\", \n\t\t\t\"sort\": 97930, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"2878ef9b-093e-4fbc-b9e6-e09f8e43afee\", \n\t\t\t\"name\": \"Licensed Steel Computer\", \n\t\t\t\"root\": \"56wk04p4k2drdgahu0rs5llkilgjn\", \n\t\t\t\"sort\": 72440, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"0b6f8a8a-a732-4888-b64a-53105705ec9b\", \n\t\t\t\"name\": \"Awesome Steel Hat\", \n\t\t\t\"root\": \"5xl413y4e0f1ztn99v8ljxexickn3\", \n\t\t\t\"sort\": 10338, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"525f0a87-b7e7-4f1f-95f4-18f72e281f1b\", \n\t\t\t\"name\": \"Handcrafted Frozen Bike\", \n\t\t\t\"root\": \"mg0kn08ipz3zq53c7h7xjahys9gns\", \n\t\t\t\"sort\": 97424, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"a25ac756-019b-4dc4-864e-913b30eb57f3\", \n\t\t\t\"name\": \"Generic Steel Pizza\", \n\t\t\t\"root\": \"gislx0yfrlf23ox8lguck8cmqgmsb\", \n\t\t\t\"sort\": 31518, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"7f68a9b2-476e-46f3-b967-3278df3e59b2\", \n\t\t\t\"name\": \"Fantastic Plastic Table\", \n\t\t\t\"root\": \"spwz1ebawh6y5litppnmcfdptln85\", \n\t\t\t\"sort\": 64724, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"6146073d-781a-4679-9d8c-270ee1496477\", \n\t\t\t\"name\": \"Generic Wooden Pizza\", \n\t\t\t\"root\": \"5t63vewhchleieho0fpqcjmlkkle9\", \n\t\t\t\"sort\": 38817, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"86c6d3d9-ecb1-4ba2-9024-100006a6b8b3\", \n\t\t\t\"name\": \"Practical Steel Bacon\", \n\t\t\t\"root\": \"199ctrsiew5do2ix80qeuls0z36lm\", \n\t\t\t\"sort\": 58729, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"db14e383-8c96-4766-b893-0805243b7532\", \n\t\t\t\"name\": \"Ergonomic Rubber Table\", \n\t\t\t\"root\": \"l1lr09copbl2vxmrtt1p3yfx7n97o\", \n\t\t\t\"sort\": 71001, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"78ec98e3-b4d4-4f0e-892a-43fa836c45ee\", \n\t\t\t\"name\": \"Small Wooden Soap\", \n\t\t\t\"root\": \"v10pfjxhucls95csui6f2cqk2fzkc\", \n\t\t\t\"sort\": 96052, \n\t\t\t\"isActive\": false\n\t\t}\n\t]\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamPaginateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement $constraint:QueryStatement)\n{\n\tiamPaginateBoundedContexts (query:$query constraint:$constraint)\n\t{\n\t\ttotal\n\t\tcount\n\t\trows\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamGetBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamGetBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamFindBoundedContext (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id:ID)\n{\n\tiamFindBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamUpdateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamUpdateBoundedContextInput!)\n{\n\tiamUpdateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Tasty Concrete Table\", \n\t\t\"root\": \"30oda9lid9k1oznhyrw9ih70txejk\", \n\t\t\"sort\": 19526, \n\t\t\"isActive\": true\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id:ID!)\n{\n\tiamDeleteBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($query:QueryStatement)\n{\n\tiamDeleteBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Rustic Concrete Bike\", \n\t\"root\": \"adkoxaf1v7nlspj8t24qehfjovyx2\", \n\t\"sort\": 83781, \n\t\"isActive\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "[\n\t{\n\t\t\"id\": \"c11c0a82-29f4-40c3-865e-d6c8a65bdeda\", \n\t\t\"name\": \"Incredible Metal Chicken\", \n\t\t\"root\": \"ryz33elra2ovyhvxcyzjlm4w9xj5v\", \n\t\t\"sort\": 98785, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"017fceb1-a552-41e1-93b1-76b186275aca\", \n\t\t\"name\": \"Unbranded Rubber Fish\", \n\t\t\"root\": \"0ez4vpdp6ovuaohg0jvmvc2zghp6x\", \n\t\t\"sort\": 65100, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"2a42b979-9343-45dc-b62b-4814d0e6c850\", \n\t\t\"name\": \"Incredible Rubber Cheese\", \n\t\t\"root\": \"9bwrbz9ayf5wyxm1rr6tskp2n9gfb\", \n\t\t\"sort\": 35195, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"76469c62-953f-43b4-af95-4264c029a13c\", \n\t\t\"name\": \"Unbranded Granite Table\", \n\t\t\"root\": \"q5zfh0z48hvqsoy1ytyko075lqdhg\", \n\t\t\"sort\": 49666, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"99569706-3c3a-4264-b7f3-2767763d6ae1\", \n\t\t\"name\": \"Small Metal Pizza\", \n\t\t\"root\": \"io9q23zmawcwq4blect4wyis7y0cx\", \n\t\t\"sort\": 31008, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"8623108c-1ee9-48c9-86e3-997639148913\", \n\t\t\"name\": \"Practical Soft Sausages\", \n\t\t\"root\": \"rzo3xwyf87d5ic0uaumbf2klowpjz\", \n\t\t\"sort\": 74847, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"dcd8d448-931f-46a9-b9cc-eceafe1497a9\", \n\t\t\"name\": \"Awesome Granite Chips\", \n\t\t\"root\": \"fg8gfs67k6bsjxl16vhnjm5qm733n\", \n\t\t\"sort\": 40282, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"853e1057-b286-405e-ad3d-0b555d294f8e\", \n\t\t\"name\": \"Handcrafted Cotton Bike\", \n\t\t\"root\": \"b2lvvxs5xveqt91x58duqeotv8kz2\", \n\t\t\"sort\": 39797, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"d0de91a5-9b47-4d53-b748-4c5c9f37a7d2\", \n\t\t\"name\": \"Handmade Rubber Keyboard\", \n\t\t\"root\": \"zb6xl15obmit23mvu5v2u3fpfk04c\", \n\t\t\"sort\": 72972, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"ac94a92a-4bc9-485e-a3d5-049931a814ce\", \n\t\t\"name\": \"Generic Wooden Pizza\", \n\t\t\"root\": \"y95srkj8yrtioeorcrmv8a2w3rrkc\", \n\t\t\"sort\": 77541, \n\t\t\"isActive\": true\n\t}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/create",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "create"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/paginate",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/paginate",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
                        "bounded-contexts",
                        "paginate"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/get",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/get",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "get"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/find/{id}",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/find/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "find",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Refined Concrete Table\", \n\t\"root\": \"tjvyopb6oiluikgovn3vn9tjnrq2h\", \n\t\"sort\": 50595, \n\t\"isActive\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/update",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "update"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/delete/{id}",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/delete/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
                        "delete",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
		},
        {
			"name": "REST - iam/bounded-contexts/delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/delete",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts",
                        "delete"
					]
				}
			},
			"response": []
		}
    ],
    "variable": [
		{
			"id": "d9bc3afc-fd40-5505-b57f-8f5d5118e01b",
			"key": "URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}